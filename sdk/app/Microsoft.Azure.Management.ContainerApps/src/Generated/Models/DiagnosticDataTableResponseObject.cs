// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.ContainerApps.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Diagnostics data table
    /// </summary>
    public partial class DiagnosticDataTableResponseObject
    {
        /// <summary>
        /// Initializes a new instance of the DiagnosticDataTableResponseObject
        /// class.
        /// </summary>
        public DiagnosticDataTableResponseObject()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DiagnosticDataTableResponseObject
        /// class.
        /// </summary>
        /// <param name="tableName">Table name</param>
        /// <param name="columns">Columns in the table</param>
        /// <param name="rows">Rows in the table</param>
        public DiagnosticDataTableResponseObject(string tableName = default(string), IList<DiagnosticDataTableResponseColumn> columns = default(IList<DiagnosticDataTableResponseColumn>), IList<object> rows = default(IList<object>))
        {
            TableName = tableName;
            Columns = columns;
            Rows = rows;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets table name
        /// </summary>
        [JsonProperty(PropertyName = "tableName")]
        public string TableName { get; set; }

        /// <summary>
        /// Gets or sets columns in the table
        /// </summary>
        [JsonProperty(PropertyName = "columns")]
        public IList<DiagnosticDataTableResponseColumn> Columns { get; set; }

        /// <summary>
        /// Gets or sets rows in the table
        /// </summary>
        [JsonProperty(PropertyName = "rows")]
        public IList<object> Rows { get; set; }

    }
}
